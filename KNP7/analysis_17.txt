Analysis results no. 17

Ellipsoid method stopped in iteration 1000 because reached N.
Ellipsoid parameters: cut=central; eps=0.000000; N=1000; R=11.045361.
Ellipsoid performance: runtime=1753.335696 sec.; constraint-cuts=751.

First iteration in which primal was feasible: 161.
In total 367 integer solutions where found, whereas 15 where used by primal.

Solution quality:
Expected social welfare=7497.800681
Absolute deviation=5888.868802
Variance=34881791.165732
Standard deviation=5906.080863
Coefficient of variation=0.787708

Distribution of constraint cuts:
cons_cuts=[4, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 110, 112, 114, 115, 117, 119, 121, 123, 125, 126, 128, 130, 132, 134, 136, 138, 139, 141, 143, 145, 146, 148, 149, 150, 152, 154, 156, 157, 158, 160, 161, 162, 164, 166, 167, 169, 171, 172, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 263, 265, 266, 267, 269, 271, 272, 274, 275, 276, 278, 279, 280, 282, 283, 284, 286, 287, 289, 290, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 307, 308, 309, 310, 312, 313, 315, 316, 317, 319, 320, 321, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 871, 872, 873, 874, 876, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 975, 976, 977, 978, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 1000];
Distribution of found integer solutions:
int_sols=[4, 11, 17, 23, 41, 55, 87, 99, 105, 109, 110, 112, 114, 115, 121, 123, 125, 126, 136, 138, 139, 146, 148, 149, 150, 152, 154, 156, 157, 158, 160, 161, 162, 164, 166, 167, 169, 172, 174, 175, 176, 178, 179, 181, 182, 185, 186, 188, 189, 193, 196, 197, 199, 200, 202, 203, 205, 206, 207, 210, 214, 216, 217, 218, 224, 226, 227, 230, 232, 233, 235, 237, 239, 243, 246, 248, 250, 254, 256, 257, 259, 263, 266, 269, 271, 272, 274, 278, 279, 280, 282, 283, 284, 286, 287, 289, 297, 298, 302, 303, 305, 309, 310, 312, 313, 317, 319, 348, 349, 359, 360, 362, 363, 364, 365, 367, 368, 372, 373, 374, 377, 378, 380, 381, 384, 395, 407, 409, 410, 414, 416, 419, 421, 422, 423, 425, 426, 430, 431, 432, 439, 442, 444, 447, 449, 474, 476, 479, 485, 486, 487, 488, 490, 491, 493, 501, 502, 508, 509, 513, 514, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 538, 541, 542, 544, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 590, 591, 593, 596, 609, 610, 626, 627, 628, 629, 641, 642, 646, 647, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 664, 665, 666, 667, 669, 671, 672, 673, 674, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 691, 692, 693, 695, 696, 697, 698, 699, 701, 702, 703, 704, 708, 709, 714, 717, 719, 720, 721, 722, 723, 724, 726, 727, 733, 734, 777, 778, 779, 780, 781, 783, 785, 786, 787, 788, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 803, 804, 806, 808, 814, 816, 817, 818, 822, 823, 828, 829, 831, 834, 847, 857, 861, 862, 863, 865, 871, 874, 888, 889, 895, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 916, 918, 919, 922, 935, 936, 937, 938, 939, 941, 943, 944, 945, 946, 948, 949, 950, 951, 955, 956, 957, 958, 959, 963, 964, 965, 981, 982, 986, 987, 988, 989, 990, 991, 993, 994, 995, 996];
Distribution of found duplicates:
int_dupl=[5, 7, 9, 13, 15, 21, 27, 33, 39, 45, 51, 71, 77, 223, 19, 25, 31, 37, 43, 49, 57, 63, 69, 75, 81, 89, 95, 101, 107, 119, 128, 134, 141, 29, 35, 47, 53, 59, 65, 83, 171, 61, 67, 73, 79, 85, 91, 93, 97, 103, 143, 117, 130, 145, 132, 675, 229, 184, 195, 192, 191, 241, 320, 328, 339, 347, 355, 209, 212, 220, 213, 221, 236, 247, 323, 325, 331, 333, 336, 341, 344, 252, 240, 321, 327, 329, 338, 340, 346, 354, 351, 244, 352, 251, 324, 332, 335, 343, 261, 262, 265, 267, 276, 275, 293, 301, 308, 291, 294, 299, 290, 295, 307, 316, 915, 952, 966, 969, 973, 976, 983, 315, 953, 967, 970, 972, 975, 977, 984, 356, 358, 401, 382, 385, 387, 390, 392, 397, 400, 405, 369, 413, 418, 371, 376, 412, 417, 408, 403, 386, 394, 396, 404, 389, 391, 399, 427, 428, 434, 435, 445, 453, 463, 470, 478, 436, 441, 446, 451, 454, 461, 464, 469, 472, 477, 440, 450, 455, 458, 460, 465, 468, 473, 483, 456, 459, 467, 482, 437, 481, 494, 499, 504, 496, 506, 492, 497, 507, 512, 498, 503, 511, 516, 518, 517, 519, 531, 532, 539, 536, 546, 548, 563, 537, 547, 564, 543, 549, 588, 589, 595, 597, 602, 605, 607, 612, 617, 620, 622, 632, 634, 637, 644, 649, 594, 599, 601, 613, 616, 623, 638, 648, 600, 615, 625, 639, 604, 606, 611, 618, 621, 633, 636, 643, 631, 659, 668, 689, 690, 705, 710, 707, 711, 713, 715, 716, 835, 842, 844, 851, 854, 826, 730, 738, 740, 747, 755, 757, 764, 772, 774, 729, 732, 736, 739, 741, 746, 748, 753, 756, 758, 763, 766, 770, 773, 775, 728, 735, 742, 745, 750, 752, 759, 762, 767, 769, 744, 751, 761, 768, 845, 855, 869, 872, 879, 882, 887, 830, 832, 837, 839, 849, 893, 900, 784, 859, 792, 820, 819, 807, 805, 810, 812, 811, 813, 824, 825, 838, 848, 836, 841, 843, 850, 853, 892, 899, 856, 868, 873, 876, 878, 883, 886, 860, 866, 867, 881, 891, 898, 877, 884, 894, 897, 961, 960, 921, 923, 928, 930, 932, 920, 924, 927, 934, 926, 929, 931, 942, 980, 971, 978, 1000, 997, 998];

Decomposition solution:
Meaning of solution vector: [P    33 [k=4 v=0] gets set {9}, P   298 [k=4 v=0] gets set {1}, P   318 [k=4 v=0] gets set {3}, P   353 [k=4 v=0] gets set {17}, P   377 [k=4 v=0] gets set {13}, P   399 [k=4 v=0] gets set {8}, P   557 [k=4 v=0] gets set {2}, P   642 [k=4 v=0] gets set {4}, P   685 [k=4 v=0] gets set {19}, P   722 [k=4 v=0] gets set {10}, P   820 [k=4 v=0] gets set {9}, P   917 [k=4 v=0] gets set {6}, P   918 [k=4 v=0] gets set {8}, P  1002 [k=4 v=0] gets set {5}, P  1006 [k=4 v=0] gets set {15}, P  1094 [k=4 v=0] gets set {7}, P  1102 [k=4 v=0] gets set {3}, P  1121 [k=4 v=0] gets set {4}, P  1129 [k=4 v=0] gets set {10}, P  1168 [k=4 v=0] gets set {7}, P  1335 [k=4 v=0] gets set {5}, P  1498 [k=4 v=0] gets set {5}, P  1674 [k=4 v=0] gets set {9}, P  1765 [k=4 v=0] gets set {9}, P  1774 [k=4 v=0] gets set {10}, P  1948 [k=4 v=0] gets set {6}, P  1993 [k=4 v=0] gets set {3}, P  2001 [k=4 v=0] gets set {6}, P  2054 [k=4 v=0] gets set {23}, P  2057 [k=4 v=0] gets set {7}, P  2119 [k=4 v=0] gets set {7}, P  2198 [k=4 v=0] gets set {2}, P  2315 [k=4 v=0] gets set {6}, P  2367 [k=4 v=0] gets set {4}, P  2444 [k=4 v=0] gets set {9}, P  2623 [k=4 v=0] gets set {13}, P  2684 [k=4 v=0] gets set {2}, P  2763 [k=4 v=0] gets set {19}, P  2772 [k=4 v=0] gets set {2}, P  2842 [k=4 v=0] gets set {10}, P  2862 [k=4 v=0] gets set {3}, P  2895 [k=4 v=0] gets set {18}, P  2982 [k=4 v=0] gets set {8}, P  2989 [k=4 v=0] gets set {2}, P  2998 [k=4 v=0] gets set {6}, P  3026 [k=4 v=0] gets set {1}, P  3070 [k=4 v=0] gets set {1}, P  3132 [k=4 v=0] gets set {7}, P  3215 [k=4 v=0] gets set {30}, P  3217 [k=4 v=0] gets set {4}, P  3355 [k=4 v=0] gets set {6}, P  3371 [k=4 v=0] gets set {1}, P  3449 [k=4 v=0] gets set {16}, P  3572 [k=4 v=0] gets set {7}, P  3620 [k=4 v=0] gets set {4}, P  4017 [k=4 v=0] gets set {16}, P  4036 [k=4 v=0] gets set {13}, P  4074 [k=4 v=0] gets set {2}, P  4265 [k=4 v=0] gets set {19}, P  4296 [k=4 v=0] gets set {4}, P  4356 [k=4 v=0] gets set {1}, P  4496 [k=4 v=0] gets set {22}, P  4498 [k=4 v=0] gets set {11}, P  4609 [k=4 v=0] gets set {3}, P  4618 [k=4 v=0] gets set {5}, P  4725 [k=4 v=0] gets set {14}, P  4761 [k=4 v=0] gets set {1}, P  4836 [k=4 v=0] gets set {1}, P  4903 [k=4 v=0] gets set {6}, P  5202 [k=4 v=0] gets set {1}, P  5216 [k=4 v=0] gets set {26}, P  5279 [k=4 v=0] gets set {16}, P  5291 [k=4 v=0] gets set {15}, P  5375 [k=4 v=0] gets set {20}, P  5589 [k=4 v=0] gets set {5}, P  5590 [k=4 v=0] gets set {15}, P  5706 [k=4 v=0] gets set {14}, P  5732 [k=4 v=0] gets set {7}, P  5813 [k=4 v=0] gets set {12}, P  5889 [k=4 v=0] gets set {2}, P  6094 [k=4 v=0] gets set {11}, P  6185 [k=4 v=0] gets set {1}, P  6479 [k=4 v=0] gets set {7}, P  6676 [k=4 v=0] gets set {17}, P  6911 [k=4 v=0] gets set {1}, P  6921 [k=4 v=0] gets set {3}, P  6994 [k=4 v=0] gets set {9}, P  7031 [k=4 v=0] gets set {9}, P  7046 [k=4 v=0] gets set {25}, P  7144 [k=4 v=0] gets set {4}, P  7211 [k=4 v=0] gets set {8}, P  7300 [k=4 v=0] gets set {14}, P  7438 [k=4 v=0] gets set {4}, P  7664 [k=4 v=0] gets set {17}, P  7852 [k=4 v=0] gets set {1}, P  7880 [k=4 v=0] gets set {3}, P  8055 [k=4 v=0] gets set {1}, P  8088 [k=4 v=0] gets set {12}, P  8380 [k=4 v=0] gets set {2}, P  8395 [k=4 v=0] gets set {1}, P  8405 [k=4 v=0] gets set {2}, P  8407 [k=4 v=0] gets set {21}, P  8414 [k=4 v=0] gets set {4}, P  8472 [k=4 v=0] gets set {7}, P  8531 [k=4 v=0] gets set {19}, P  8571 [k=4 v=0] gets set {6}, P  8611 [k=4 v=0] gets set {7}, P  8914 [k=4 v=0] gets set {4}, P  8949 [k=4 v=0] gets set {8}, P  8978 [k=4 v=0] gets set {15}, P  8993 [k=4 v=0] gets set {5}, P  9091 [k=4 v=0] gets set {3}, P  9138 [k=4 v=0] gets set {1}, P  9155 [k=4 v=0] gets set {1}, P  9190 [k=4 v=0] gets set {6}, P  9355 [k=4 v=0] gets set {1}, P  9461 [k=4 v=0] gets set {5}, P  9645 [k=4 v=0] gets set {14}, P  9673 [k=4 v=0] gets set {17}, P  9780 [k=4 v=0] gets set {13}, P  9803 [k=4 v=0] gets set {18}]
Probabilities and corresponding integer solution:
lambda_15 = 0.025000 and welfare = 14953.256653 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
lambda_83 = 0.056667 and welfare = 13821.092412 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
lambda_96 = 0.290000 and welfare = 1951.801810 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
lambda_97 = 0.338333 and welfare = 13174.201369 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
lambda_163 = 0.015000 and welfare = 1520.045849 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0]
lambda_208 = 0.030000 and welfare = 13832.781749 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]
lambda_218 = 0.011667 and welfare = 12872.698470 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
lambda_237 = 0.010000 and welfare = 1622.140560 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]
lambda_240 = 0.046667 and welfare = 653.528454 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
lambda_250 = 0.055000 and welfare = 1439.023042 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]
lambda_271 = 0.015000 and welfare = 13737.821380 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
lambda_281 = 0.058333 and welfare = 993.809427 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
lambda_291 = 0.018333 and welfare = 13275.282014 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0]
lambda_332 = 0.005000 and welfare = 12884.839850 and x_l = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
lambda_347 = 0.025000 and welfare = 1272.193706 and x_l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]
lambda_else = 0
Using 15 out of 367 integer solutions.
Expected social welfare: 7497.800681
Objective value of primal LP: 1.000000


